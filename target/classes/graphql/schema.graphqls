type Query{
    getUserDetail(id: String): UserVo

    getNonce(address: String): String
}

type Mutation{
    loginWithTg(req: LoginWithTgReq!) : LoginResult

    bindTwitterUserInfo(req: BindTwitterUserInfoRequest!): Boolean

    bindEthAddress(req: BindEthAddressRequest!): Boolean


}


#private String id;
#private String name;
#private String status;
type UserVo {
    # user id
    id: String
    # user name
    name: String
    # user status
    status: String
}

type LoginResult{
    userId: String
    token:String
}

input LoginWithTgReq {
    # style id
    tgId: String!
    # is public
    tgUserInfoStr: String
}

input BindTwitterUserInfoRequest {
    # style id
    code: String!
    # is public
    status: String
}

input BindEthAddressRequest {
    # style id
    ethAddress: String!

    signature: String!
}